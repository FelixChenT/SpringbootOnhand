# 这是一个根级别的注释
spring:
  application:
    name: demo01  # 这是行尾注释，注释应用程序的名称
  profiles:
    active: dev

# 配置服务器端口
server:
  port: 8080  # 这是行尾注释，解释端口号

# 配置slf4j日志服务
logging:

  config: classpath:logback.xml
  level:
    # 常用的日志级别按照从高到低依次为：ERROR、WARN、INFO、DEBUG
    root: info
    # logging.level 是用来指定具体的 mapper 中日志的输出级别，
    # 上面的配置表示 com.chentao.demo01.pojo.dao 包下的所有 mapper 日志输出级别为 trace，会将操作数据库的 sql 打印出来，
    # 开发时设置成 trace 方便定位问题
    com.chentao.demo01.pojo.dao: trace
# C:\Users\10629\IdeaProjects\demo01\logback.xml (系统找不到指定的文件。)






# 编写 YAML 时应遵循的原则

# 1. 缩进统一：
#    YAML 使用缩进表示层级关系，通常每一级缩进用两个空格表示。
#    不能使用 Tab 键作为缩进，必须使用空格。

# 2. 保持层级清晰：
#    每个子项应该缩进到相对于它的父项下面，缩进的深度决定了数据的层级关系。

# 3. 避免多余的空格：
#    在键和值之间只需一个空格，不要多余的空格。

# 4. 使用正确的数据格式：
#    - 字符串：可以直接写，也可以用引号包裹（单引号或双引号）。
#    - 数值：直接写，不要用引号包裹。
#    - 布尔值：使用 true 或 false，小写。
#    - 列表：使用 - 开头，元素放在同一层级。

# 5. 注释：
#    使用 # 开头注释，注释内容与键值之间留一个空格。

# 6. 保持简洁：
#    避免不必要的复杂性，尽量使配置文件易读和易维护。

# 7. 键的命名：
#    保持命名一致性，使用小写字母和中划线（-）来分隔单词，不要使用驼峰或下划线。

# 8. 避免重复键：
#    YAML 不允许同一个层级下有重复的键。